import { Collapsible } from '@/components/Collapsible';
import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { useAuth } from '@/stores/authContext';
import React, { useState } from 'react';
import { Alert, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';

interface UserProfile {
  name: string;
  email: string;
  phone: string;
  role: 'admin' | 'staff' | 'customer';
  joinDate: string;
}

export default function ProfileScreen() {
  const { logout, user } = useAuth();
  const [profile, setProfile] = useState<UserProfile>({
    name: user?.name || 'ÍπÄÍ¥ÄÎ¶¨Ïûê',
    email: user?.email || 'admin@kmcbeauty.com',
    phone: '010-1234-5678',
    role: 'admin',
    joinDate: '2024-01-15'
  });

  const [bookingHistory] = useState([
    { id: '1', service: 'ÌôîÏû•', date: '2024-09-01', status: 'ÏôÑÎ£å' },
    { id: '2', service: 'ÎààÏçπ', date: '2024-08-28', status: 'ÏôÑÎ£å' },
    { id: '3', service: 'ÎëêÌîºÏºÄÏñ¥', date: '2024-09-15', status: 'ÏòàÏ†ï' },
  ]);

  const handleEditProfile = () => {
    Alert.alert('ÌîÑÎ°úÌïÑ ÏàòÏ†ï', 'ÌîÑÎ°úÌïÑ ÏàòÏ†ï ÌôîÎ©¥ÏúºÎ°ú Ïù¥ÎèôÌï©ÎãàÎã§.');
  };

  const handleChangePassword = () => {
    Alert.alert('ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω', 'ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω ÌôîÎ©¥ÏúºÎ°ú Ïù¥ÎèôÌï©ÎãàÎã§.');
  };

  const handleLogout = () => {
    Alert.alert(
      'Î°úÍ∑∏ÏïÑÏõÉ',
      'Ï†ïÎßê Î°úÍ∑∏ÏïÑÏõÉ ÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
      [
        { text: 'Ï∑®ÏÜå', style: 'cancel' },
        { text: 'Î°úÍ∑∏ÏïÑÏõÉ', style: 'destructive', onPress: async () => {
          try {
            console.log('üö™ ÏÇ¨Ïö©ÏûêÍ∞Ä Î°úÍ∑∏ÏïÑÏõÉ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏäµÎãàÎã§');
            await logout();
            console.log('‚úÖ Î°úÍ∑∏ÏïÑÏõÉ ÏôÑÎ£å - AuthNavigatorÍ∞Ä ÏûêÎèôÏúºÎ°ú Î°úÍ∑∏Ïù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥ÎèôÌï† Í≤ÉÏûÖÎãàÎã§');
          } catch (error) {
            console.error('Î°úÍ∑∏ÏïÑÏõÉ Ïã§Ìå®:', error);
            Alert.alert('Ïò§Î•ò', 'Î°úÍ∑∏ÏïÑÏõÉ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
          }
        }}
      ]
    );
  };

  const getRoleText = (role: string) => {
    switch (role) {
      case 'admin': return 'Í¥ÄÎ¶¨Ïûê';
      case 'staff': return 'ÏßÅÏõê';
      case 'customer': return 'Í≥†Í∞ù';
      default: return 'ÏÇ¨Ïö©Ïûê';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ÏôÑÎ£å': return '#28a745';
      case 'ÏòàÏ†ï': return '#007AFF';
      case 'Ï∑®ÏÜå': return '#dc3545';
      default: return '#6c757d';
    }
  };

  return (
    <ThemedView style={styles.container}>
      <ThemedText type="title" style={styles.title}>
        ÌîÑÎ°úÌïÑ
      </ThemedText>
      
      <ScrollView style={styles.content}>
        <Collapsible title="ÎÇ¥ Ï†ïÎ≥¥">
          <ThemedView style={styles.profileSection}>
            <ThemedView style={styles.profileItem}>
              <ThemedText type="defaultSemiBold">Ïù¥Î¶Ñ</ThemedText>
              <ThemedText>{profile.name}</ThemedText>
            </ThemedView>
            <ThemedView style={styles.profileItem}>
              <ThemedText type="defaultSemiBold">Ïù¥Î©îÏùº</ThemedText>
              <ThemedText>{profile.email}</ThemedText>
            </ThemedView>
            <ThemedView style={styles.profileItem}>
              <ThemedText type="defaultSemiBold">Ï†ÑÌôîÎ≤àÌò∏</ThemedText>
              <ThemedText>{profile.phone}</ThemedText>
            </ThemedView>
            <ThemedView style={styles.profileItem}>
              <ThemedText type="defaultSemiBold">Í∂åÌïú</ThemedText>
              <ThemedText>{getRoleText(profile.role)}</ThemedText>
            </ThemedView>
            <ThemedView style={styles.profileItem}>
              <ThemedText type="defaultSemiBold">Í∞ÄÏûÖÏùº</ThemedText>
              <ThemedText>{profile.joinDate}</ThemedText>
            </ThemedView>
            
            <TouchableOpacity style={styles.editButton} onPress={handleEditProfile}>
              <ThemedText style={styles.editButtonText}>ÌîÑÎ°úÌïÑ ÏàòÏ†ï</ThemedText>
            </TouchableOpacity>
          </ThemedView>
        </Collapsible>

        <Collapsible title="ÏòàÏïΩ ÎÇ¥Ïó≠">
          <ThemedView style={styles.historySection}>
            {bookingHistory.map((booking) => (
              <ThemedView key={booking.id} style={styles.historyItem}>
                <ThemedView style={styles.historyInfo}>
                  <ThemedText type="defaultSemiBold">{booking.service}</ThemedText>
                  <ThemedText>{booking.date}</ThemedText>
                </ThemedView>
                <ThemedView 
                  style={[
                    styles.statusBadge,
                    { backgroundColor: getStatusColor(booking.status) }
                  ]}
                >
                  <ThemedText style={styles.statusText}>{booking.status}</ThemedText>
                </ThemedView>
              </ThemedView>
            ))}
          </ThemedView>
        </Collapsible>

        <Collapsible title="ÏÑ§Ï†ï">
          <ThemedView style={styles.settingsSection}>
            <TouchableOpacity 
              style={styles.settingItem} 
              onPress={handleChangePassword}
            >
              <ThemedText>ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω</ThemedText>
              <ThemedText style={styles.arrow}>‚Ä∫</ThemedText>
            </TouchableOpacity>
            
            <TouchableOpacity style={styles.settingItem}>
              <ThemedText>ÏïåÎ¶º ÏÑ§Ï†ï</ThemedText>
              <ThemedText style={styles.arrow}>‚Ä∫</ThemedText>
            </TouchableOpacity>
            
            <TouchableOpacity style={styles.settingItem}>
              <ThemedText>Ïï± Ï†ïÎ≥¥</ThemedText>
              <ThemedText style={styles.arrow}>‚Ä∫</ThemedText>
            </TouchableOpacity>
          </ThemedView>
        </Collapsible>

        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
          <ThemedText style={styles.logoutButtonText}>Î°úÍ∑∏ÏïÑÏõÉ</ThemedText>
        </TouchableOpacity>
      </ScrollView>
    </ThemedView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
  },
  title: {
    marginBottom: 20,
    textAlign: 'center',
  },
  content: {
    flex: 1,
  },
  profileSection: {
    gap: 15,
  },
  profileItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingVertical: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  editButton: {
    backgroundColor: '#007AFF',
    padding: 12,
    borderRadius: 8,
    alignItems: 'center',
    marginTop: 10,
  },
  editButtonText: {
    color: 'white',
    fontWeight: '600',
  },
  historySection: {
    gap: 10,
  },
  historyItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 12,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#ddd',
  },
  historyInfo: {
    flex: 1,
  },
  statusBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 4,
  },
  statusText: {
    color: 'white',
    fontSize: 12,
    fontWeight: '600',
  },
  settingsSection: {
    gap: 5,
  },
  settingItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 15,
    paddingHorizontal: 5,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  arrow: {
    fontSize: 18,
    color: '#999',
  },
  logoutButton: {
    backgroundColor: '#dc3545',
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
    marginTop: 30,
    marginBottom: 20,
  },
  logoutButtonText: {
    color: 'white',
    fontWeight: '600',
  },
});
